name: CI/CD Pipeline AutomÃ¡tico

on:
  push:
    branches:
      - main
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  tag-and-docker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get latest tag
        id: get_tag
        run: |
          latest_tag=$(git describe --tags `git rev-list --tags --max-count=1` 2>/dev/null)
          echo "latest_tag=$latest_tag" >> $GITHUB_ENV

      - name: Calculate new tag
        id: new_tag
        run: |
          if [ -z "$latest_tag" ]; then
            new_tag="0.0.1"
          else
            IFS='.' read -r major minor patch <<< "${latest_tag//v/}"
            patch=$((patch+1))
            new_tag="$major.$minor.$patch"
          fi
          echo "New tag: $new_tag"
          echo "new_tag=$new_tag" >> $GITHUB_ENV

      - name: Create and push tag
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag $new_tag
          git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} $new_tag

      - name: Print current time (demo)
        run: |
          for i in {1..3}; do date; sleep 60; done

      - name: Build Docker image
        run: |
          docker build -t mi-app-flask:$new_tag .
          docker images
