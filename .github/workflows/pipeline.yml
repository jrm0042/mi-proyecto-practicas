name: CI/CD Pipeline Automático

# Cuándo se ejecuta el pipeline
on:
  push:
    branches:
      - main      # Se ejecuta cuando se hace push a main
  pull_request:
    types: [closed]
    branches:
      - main      # Se ejecuta cuando se cierra un PR apuntando a main

jobs:
  tag-and-docker:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Traer todo el código y el historial completo
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0   # Muy importante para manejar tags

      # 2️⃣ Crear tag automático usando acción oficial
      - name: Create GitHub Tag
        uses: anothrNick/github-tag-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release_branches: main
          default_bump: patch

      # 3️⃣ Print de prueba: imprimir la hora 3 veces
      - name: Print current time (demo)
        run: |
          for i in {1..3}; do date; sleep 60; done

      # 4️⃣ Build Docker
      - name: Build Docker image
        run: |
          docker build -t mi-app-flask:latest .
          docker images


